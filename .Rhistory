print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var, labels = ~variable, values = ~Freq,
name = "variableName", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = var, labels = ~variable, values = ~Freq,
name = "variableName", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "variableName", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "variableName", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F, hole= .6,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0))
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1))
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F, hole= 0.6,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0 ), hole= 0.6,)
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1), hole= 0.6,)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0 ), hole= 0.6)
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1), hole= 0.6)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0 )
, hole= 0.6, title="z")
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1), hole= 0.6)
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives <- function(subscribers, notSubscribers) {
# pars <- as.list(match.call()[-1])
# var <- as.character(pars$variableName)
# print(var)
# print(count(data_subscribers, 'age'))
#
# get(name, df)
var1 = as.data.frame(table(subscribers))
var2 = as.data.frame(table(notSubscribers))
print(var)
fig <- plot_ly()
fig <- fig %>% add_pie(data = var1, labels = ~subscribers, values = ~Freq,
name = "Subscriber", domain = list(row = 0, column = 0 )
, hole= 0.6, title="Subscribers")
fig <- fig %>% add_pie(data = var2, labels = ~notSubscribers, values = ~Freq,
name = "Not subscriber", domain = list(row = 0, column = 1),
hole= 0.6, title="Not subscribers")
fig <- fig %>% layout(title = "Pie Charts with Subplots", showlegend = F,
grid=list(rows=2, columns=2),
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
return(fig)
}
plot_subscribers_qualitatives(data_subscribers$age, data_notSubscribers$age)
plot_subscribers_qualitatives(data_subscribers$duration, data_notSubscribers$duration)
plot_bivariate <- function(variable1, variable2, xlabel, ylabel,var_type1="quantitative", var_type2="quantitative") {
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = xlabel,
titlefont = f
)
y <- list(
title = ylabel,
titlefont = f
)
if(var_type1=="quantitative" && var_type2 == "quantitative") {
fig <- plot_ly(x = ~variable1, y = ~variable2, mode = "markers",
marker = list(size = 10,
color = 'rgba(255, 182, 193, .9)',
line = list(color = 'rgba(152, 0, 0, .8)',
width = 2)))
fig <- fig %>% layout(title = 'Scatter plot',
yaxis = list(zeroline = FALSE),
xaxis = list(zeroline = FALSE))
fig <- fig %>% layout(xaxis = x, yaxis = y)
return  (fig)
}
else{
if(var_type1!=var_type2){
if(class(variable1)=="factor"){
fig <- plot_ly(y = ~variable2,x=~variable1, type = "box")
}
else{
fig <- plot_ly(y = ~variable1,x=~variable2, type = "box")
}
fig <- fig %>% layout(xaxis = x, yaxis = y)
return  (fig)
}
else{
if(var_type1=="qualitative" && var_type2 == "qualitative") {
df <- cbind(variable1, variable2)
names(df)[1] <- "col1"
names(df)[2] <- "col2"
fig <- df
fig <- fig %>% count(col1, col2)
fig <- fig %>% plot_ly(x = ~col1, y = ~n, color = ~col2)
return(fig)
}
}
}
}
# if qual vs qaul
v1 = data %>% select(job)
v2 = data %>% select(duration)
fig = plot_bivariate(variable1=v1, variable2=v2, xlabel = 'var1', ylabel = 'var2', var_type1 = "qualitative", var_type2 = 'qualitative')
fig
fig <- plot_ly(
type='histogram',
x=~data_subscribers$age,
bingroup=1)
fig <- fig %>% add_trace(
type='histogram',
x=~data_notSubscribers$age,
bingroup=1)
fig <- fig %>% layout(
barmode="overlay",
bargap=0.1)
fig
fig <- plot_ly(
type='histogram',
x=~data_subscribers$campaign,
bingroup=1)
fig <- fig %>% add_trace(
type='histogram',
x=~data_notSubscribers$campaign,
bingroup=1)
fig <- fig %>% layout(
barmode="overlay",
bargap=0.1)
fig
fig <- plot_ly(
type='histogram',
x=~data_subscribers$campaign)
fig <- fig %>% add_trace(
type='histogram',
x=~data_notSubscribers$campaign)
fig <- fig %>% layout(
barmode="overlay",
bargap=0.1)
fig
fig <- plot_ly(
type='histogram',
x=~data_subscribers$campaign)
fig <- fig %>% add_trace(
type='histogram',
x=~data_notSubscribers$campaign)
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
fig
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~data_subscribers$campaign)
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~data_notSubscribers$campaign)
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
fig
plot_subscribers_quantitatives <- function(subscribers, notSubscribers) {
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers)
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers)
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign)
plot_subscribers_quantitatives <- function(subscribers, notSubscribers) {
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers,
name="Subscribers")
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers,
name="Not subscribers")
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign)
plot_subscribers_quantitatives <- function(subscribers, notSubscribers) {
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = xlabel,
titlefont = f
)
y <- list(
title = ylabel,
titlefont = f
)
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers,
name="Subscribers")
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers,
name="Not subscribers")
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
fig <- fig %>% layout(xaxis = "aa", yaxis = "percent")
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign)
plot_subscribers_quantitatives <- function(subscribers, notSubscribers) {
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = xlabel,
titlefont = f
)
y <- list(
title = ylabel,
titlefont = f
)
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers,
name="Subscribers")
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers,
name="Not subscribers")
fig <- fig %>% layout(
barmode="stack",
bargap=0.1,xaxis = "aa", yaxis = "percent")
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign)
plot_subscribers_quantitatives <- function(subscribers, notSubscribers) {
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = 'xlabel',
titlefont = f
)
y <- list(
title = 'ylabel',
titlefont = f
)
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers,
name="Subscribers")
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers,
name="Not subscribers")
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
fig <- fig %>% layout(xaxis = x, yaxis = y)
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign)
plot_subscribers_quantitatives <- function(subscribers, notSubscribers, xlabel) {
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = xlabel,
titlefont = f
)
y <- list(
title = 'Percent',
titlefont = f
)
fig <- plot_ly(
type='histogram',
histnorm = "percent",
x=~subscribers,
name="Subscribers")
fig <- fig %>% add_trace(
type='histogram',
histnorm = "percent",
x=~notSubscribers,
name="Not subscribers")
fig <- fig %>% layout(
barmode="stack",
bargap=0.1)
fig <- fig %>% layout(xaxis = x, yaxis = y)
return(fig)
}
plot_subscribers_quantitatives(data_subscribers$campaign, data_notSubscribers$campaign, xlabel='campaign')
library(reticulate)
use_python('C:\\Users\\HP\\Anaconda3')
use_condaenv( "base")
setwd("D:/M1 MLDS/data science 2/projet_1")
laodtxt <- import("numpy.loadtxt")
data = loadtxt('rf_bs_confusion_matrix.csv', delimiter=',')
np <- import("numpy")
data = np.loadtxt('rf_bs_confusion_matrix.csv', delimiter=',')
data = np$loadtxt('rf_bs_confusion_matrix.csv', delimiter=',')
View(data)
View(data)
m = np$loadtxt('rf_bs_confusion_matrix.csv', delimiter=',')
fig <- plot_ly(
x = c("(pred) Subscriber","(pred) Not Subscriber"), y = c("(true) Not Subscriber","(true) Subscriber"),
z = m, type = "heatmap"
)
fig
plot_confusionMatrix(m)
plot_confusionMatrix <- function(m){
fig <- plot_ly(
x = c("(pred) Subscriber","(pred) Not Subscriber"), y = c("(true) Not Subscriber","(true) Subscriber"),
z = m, type = "heatmap"
)
return(fig)
}
plot_confusionMatrix(m)
m = np$loadtxt('rf_bs_confusion_matrix.csv', delimiter=',')
plot_confusionMatrix(m)
roc_rf = np$loadtxt('roc_rf_bs.csv', delimiter=',')
View(roc_rf)
View(roc_rf)
roc[1,:]
roc[1,]
roc_rf[1,]
fig <- plot_ly( x = ~roc_rf[1,], y = ~roc_rf[2,], name = 'trace 0', type = 'scatter', mode = 'lines')
# fig <- fig %>% add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')
# fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers')
fig
fig <- plot_ly( x = ~roc_rf[2,], y = ~roc_rf[1,], name = 'trace 0', type = 'scatter', mode = 'lines')
fig
fig <- plot_ly( x = ~roc_rf[1,], y = ~roc_rf[2,], name = 'trace 0', type = 'scatter', mode = 'lines')
# fig <- fig %>% add_trace(y = ~trace_1, name = 'trace 1', mode = 'lines+markers')
# fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers')
fig
roc_lr = np$loadtxt('roc_lr_bs.csv', delimiter=',')
fig <- plot_ly( x = ~roc_rf[1,], y = ~roc_rf[2,], name = 'trace 0', type = 'scatter', mode = 'lines')
fig <- fig %>% add_trace( x = ~roc_lr[1,], y = ~roc_lr[2,], name = 'trace 1', mode = 'lines')
# fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers'):
fig
fig <- plot_ly( x = ~roc_rf[1,], y = ~roc_rf[2,], name = 'Random forest', type = 'scatter', mode = 'lines')
fig <- fig %>% add_trace( x = ~roc_lr[1,], y = ~roc_lr[2,], name = 'logistic regression', mode = 'lines')
# fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers'):
fig
plot_roc<- function(roc1,roc2){
f <- list(
family = "Courier New, monospace",
size = 18,
color = "#7f7f7f"
)
x <- list(
title = "False positive rate",
titlefont = f
)
y <- list(
title = "True positive rate",
titlefont = f
)
fig <- plot_ly( x = ~roc1[1,], y = ~roc1[2,], name = 'Random forest', type = 'scatter', mode = 'lines')
fig <- fig %>% add_trace( x = ~roc2[1,], y = ~roc2[2,], name = 'logistic regression', mode = 'lines')
# fig <- fig %>% add_trace(y = ~trace_2, name = 'trace 2', mode = 'markers'):
fig <- fig %>% layout(xaxis = x, yaxis = y)
return(fig)
}
plot_roc(roc_rf,roc_lr)
shiny::runApp()
